name: Publish release
on:
  release:
    types:
      - published
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - uses: actions/setup-python@v4
        name: Setup Python
      - uses: snok/install-poetry@v1.3.3
        name: Install Poetry
      - name: Configure Poetry
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      - name: Install dependencies
        run: poetry install -E dev
      - name: Download release artifacts
        run: |
            rm -rf dist \
            && mkdir dist \
            && gh release download \
                -p "$(poetry version | cut -d ' ' -f1)*.whl" \
                -p "$(poetry version | cut -d ' ' -f1)*.tar.gz" \
                -D 'dist/' \
                v${{ github.ref_name }}
      - name: Publish package to Pypi
        run: poetry publish -n -vvv
      - name: Publish documentation
        run: |
          git config user.name 'github-actions[bot]' && \
          git config user.email 'github-actions[bot]@users.noreply.github.com' && \
          poetry run mkdocs && \
          poetry run mkdocs gh-deploy --force --clean --verbose
